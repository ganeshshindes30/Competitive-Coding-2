{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 TimesNewRomanPSMT;}
{\colortbl;\red255\green255\blue255;\red25\green25\blue25;}
{\*\expandedcolortbl;;\cssrgb\c12941\c12941\c12941;}
\margl1440\margr1440\vieww28600\viewh15320\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs32 \cf2 \expnd0\expndtw0\kerning0
\
\
class Solution:\
    \
    #Function to return max value that can be put in knapsack of capacity W.\
    def knapSack(self,W, wt, val, n):\
       \
        # code here\
        m = W \
        n = len(wt)\
        \
        dp = [[0 for x in range(m + 1)] for y in range(n + 1)]\
        \
        for i in range(1, n + 1):\
            for j in range(1, m + 1):\
                if j < wt[i - 1]:\
                    dp[i][j] = dp[i-1][j]\
                else:\
                    dp[i][j] = max(dp[i-1][j], val[i - 1] + dp[i-1][j - wt[i - 1]])\
           \
        return dp[n][m]\
\
#\{ \
 # Driver Code Starts\
#Initial Template for Python 3\
import atexit\
import io\
import sys\
\
# Contributed by : Nagendra Jha\
\
if __name__ == '__main__':\
    test_cases = int(input())\
    for cases in range(test_cases):\
        n = int(input())\
        W = int(input())\
        val = list(map(int,input().strip().split()))\
        wt = list(map(int,input().strip().split()))\
        ob=Solution()\
        print(ob.knapSack(W,wt,val,n))\
# \} Driver Code Ends}